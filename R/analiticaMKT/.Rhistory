knitr::opts_chunk$set(echo = TRUE)
library(ROCR)
library(caTools)
setwd("/home/fernando/Documents/programming/R/analiticaMKT")
BANK_OLD=read.csv2("HistoricaSeguroAhorro.csv")
BANK_NEW=read.csv2("NuevaSeguroAhorro.csv")
str(BANK_OLD)
str(BANK_NEW)
summary(BANK_OLD)
summary(BANK_NEW)
head(BANK_OLD)
head(BANK_NEW)
tail(BANK_OLD)
tail(BANK_NEW)
summary(BANK_OLD)
summary(BANK_NEW)
BANK_OLD$CAMP_DEPOSITOS=as.factor(BANK_OLD$CAMP_DEPOSITOS)
str(BANK_OLD)
summary(BANK_OLD)
set.seed(1234)
SAMPLE = sample.split(BANK_OLD$CAMP_DEPOSITOS, SplitRatio = .60)
BANKTrain = subset(BANK_OLD, SAMPLE == TRUE)
BANKValTest = subset(BANK_OLD, SAMPLE == FALSE)
set.seed(1234)
SAMPLE = sample.split(BANKValTest$CAMP_DEPOSITOS, SplitRatio = .50)
BANKVal= subset(BANKValTest, SAMPLE == TRUE)
BANKTest = subset(BANKValTest, SAMPLE == FALSE)
dim(BANK_OLD)
dim(BANKTrain)
dim(BANKVal)
dim(BANKTest)
table(BANK_OLD$CAMP_DEPOSITOS)
sum(BANK_OLD$CAMP_DEPOSITOS==1)/length(BANK_OLD$CAMP_DEPOSITOS)
table(BANKTrain$CAMP_DEPOSITOS)
prior=sum(BANKTrain$CAMP_DEPOSITOS==1)/length(BANKTrain$CAMP_DEPOSITOS)
prior
table(BANKVal$CAMP_DEPOSITOS)
sum(BANKVal$CAMP_DEPOSITOS==1)/length(BANKVal$CAMP_DEPOSITOS)
table(BANKTest$CAMP_DEPOSITOS)
sum(BANKTest$CAMP_DEPOSITOS==1)/length(BANKTest$CAMP_DEPOSITOS)
length(BANK_OLD$CAMP_DEPOSITOS)
dim(BANK_OLD$CAMP_DEPOSITOS)
relevancia=function(Target,VariableCategorica){
levels=levels(VariableCategorica)
colors=c()
for (i in 1:length(levels)){
TABLA=table(Target,VariableCategorica==levels[i])
chi=chisq.test(TABLA)
if (chi$p.value<0.05){
colors=c(colors,"green")
}else{
colors=c(colors,"gray")
}
}
TABLA=table(Target,VariableCategorica)
plot=barplot(100*TABLA[2,]/(TABLA[1,]+TABLA[2,]),ylim=c(0,100),col=colors,cex.names=0.6)
text(x=plot, y=5+100*TABLA[2,]/(TABLA[1,]+TABLA[2,]),labels=paste(round(100*TABLA[2,]/(TABLA[1,]+TABLA[2,]),2),"%",sep=""))
abline(h=100*prior,col="red")
}
relevancia(BANKTrain$CAMP_DEPOSITOS,BANKTrain$CAT_EDAD)
relevancia=function(Target,VariableCategorica){
levels=levels(VariableCategorica)
colors=c()
for (i in 1:length(levels)){
TABLA=table(Target,VariableCategorica==levels[i])
chi=chisq.test(TABLA)
if (chi$p.value<0.05){
colors=c(colors,"green")
}else{
colors=c(colors,"gray")
}
}
TABLA=table(Target,VariableCategorica)
plot=barplot(100*TABLA[2,]/(TABLA[1,]+TABLA[2,]),ylim=c(0,100),col=colors,cex.names=0.6)
text(x=plot, y=5+100*TABLA[2,]/(TABLA[1,]+TABLA[2,]),labels=paste(round(100*TABLA[2,]/(TABLA[1,]+TABLA[2,]),2),"%",sep=""))
abline(h=100*prior,col="red")
TABLA
}
relevancia(BANKTrain$CAMP_DEPOSITOS,BANKTrain$CAT_EDAD)
table(BANK_OLD$CAMP_DEPOSITOS)
sum(BANK_OLD$CAMP_DEPOSITOS==1)/length(BANK_OLD$CAMP_DEPOSITOS)
table(BANKTrain$CAMP_DEPOSITOS)
prior=sum(BANKTrain$CAMP_DEPOSITOS==1)/length(BANKTrain$CAMP_DEPOSITOS)
print("prior =", prior)
table(BANKVal$CAMP_DEPOSITOS)
sum(BANKVal$CAMP_DEPOSITOS==1)/length(BANKVal$CAMP_DEPOSITOS)
table(BANKTest$CAMP_DEPOSITOS)
sum(BANKTest$CAMP_DEPOSITOS==1)/length(BANKTest$CAMP_DEPOSITOS)
table(BANK_OLD$CAMP_DEPOSITOS)
sum(BANK_OLD$CAMP_DEPOSITOS==1)/length(BANK_OLD$CAMP_DEPOSITOS)
table(BANKTrain$CAMP_DEPOSITOS)
prior=sum(BANKTrain$CAMP_DEPOSITOS==1)/length(BANKTrain$CAMP_DEPOSITOS)
print("prior =%f", prior)
table(BANKVal$CAMP_DEPOSITOS)
sum(BANKVal$CAMP_DEPOSITOS==1)/length(BANKVal$CAMP_DEPOSITOS)
table(BANKTest$CAMP_DEPOSITOS)
sum(BANKTest$CAMP_DEPOSITOS==1)/length(BANKTest$CAMP_DEPOSITOS)
table(BANK_OLD$CAMP_DEPOSITOS)
sum(BANK_OLD$CAMP_DEPOSITOS==1)/length(BANK_OLD$CAMP_DEPOSITOS)
table(BANKTrain$CAMP_DEPOSITOS)
prior=sum(BANKTrain$CAMP_DEPOSITOS==1)/length(BANKTrain$CAMP_DEPOSITOS)
sprintf("prior =%f", prior)
table(BANKVal$CAMP_DEPOSITOS)
sum(BANKVal$CAMP_DEPOSITOS==1)/length(BANKVal$CAMP_DEPOSITOS)
table(BANKTest$CAMP_DEPOSITOS)
sum(BANKTest$CAMP_DEPOSITOS==1)/length(BANKTest$CAMP_DEPOSITOS)
table(BANK_OLD$CAMP_DEPOSITOS)
sum(BANK_OLD$CAMP_DEPOSITOS==1)/length(BANK_OLD$CAMP_DEPOSITOS)
table(BANKTrain$CAMP_DEPOSITOS)
prior=sum(BANKTrain$CAMP_DEPOSITOS==1)/length(BANKTrain$CAMP_DEPOSITOS)
sprintf("prior = %f", prior)
table(BANKVal$CAMP_DEPOSITOS)
sum(BANKVal$CAMP_DEPOSITOS==1)/length(BANKVal$CAMP_DEPOSITOS)
table(BANKTest$CAMP_DEPOSITOS)
sum(BANKTest$CAMP_DEPOSITOS==1)/length(BANKTest$CAMP_DEPOSITOS)
woe_iv=function(Target,VariableCategorica){
Tabla_WOE=table(VariableCategorica,Target)
DF_WOE=data.frame(FRACASOS=Tabla_WOE[,1],EXITOS=Tabla_WOE[,2])
DF_WOE$EXITOS_PORC=DF_WOE$EXITOS/sum(DF_WOE$EXITOS)
DF_WOE$FRACASOS_PORC=DF_WOE$FRACASOS/sum(DF_WOE$FRACASOS)
DF_WOE$WOE=log(DF_WOE$EXITOS_PORC/DF_WOE$FRACASOS_PORC)
DF_WOE$IV=(DF_WOE$EXITOS_PORC-DF_WOE$FRACASOS_PORC)*DF_WOE$WOE
DF_WOE
}
WOE_CAT_EDAD=woe_iv(BANKTrain$CAMP_DEPOSITOS,BANKTrain$CAT_EDAD)
WOE_CAT_EDAD
IV_CAT_EDAD=sum(WOE_CAT_EDAD$IV)
IV_CAT_EDAD
relevancia(BANKTrain$CAMP_DEPOSITOS,BANKTrain$NIVEL_ESTUDIO)
WOE_NIVEL_ESTUDIOS=woe_iv(BANKTrain$CAMP_DEPOSITOS,BANKTrain$NIVEL_ESTUDIO)
WOE_NIVEL_ESTUDIOS
IV_NIVEL_ESTUDIOS=sum(WOE_NIVEL_ESTUDIOS$IV)
IV_NIVEL_ESTUDIOS
relevancia(BANKTrain$CAMP_DEPOSITOS,BANKTrain$RANGO_INGRESOS)
WOE_RANGO_INGRESOS=woe_iv(BANKTrain$CAMP_DEPOSITOS,BANKTrain$RANGO_INGRESOS)
WOE_RANGO_INGRESOS
IV_RANGO_INGRESOS=sum(WOE_RANGO_INGRESOS$IV)
IV_RANGO_INGRESOS
relevancia(BANKTrain$CAMP_DEPOSITOS,BANKTrain$ESTADO_CIVIL)
WOE_ESTADO_CIVIL=woe_iv(BANKTrain$CAMP_DEPOSITOS,BANKTrain$ESTADO_CIVIL)
WOE_ESTADO_CIVIL
IV_ESTADO_CIVIL=sum(WOE_ESTADO_CIVIL$IV)
IV_ESTADO_CIVIL
relevancia(BANKTrain$CAMP_DEPOSITOS,BANKTrain$SEXO)
WOE_SEXO=woe_iv(BANKTrain$CAMP_DEPOSITOS,BANKTrain$SEXO)
WOE_SEXO
IV_SEXO=sum(WOE_SEXO$IV)
IV_SEXO
IV_RANGO_INGRESOS
IV_NIVEL_ESTUDIOS
IV_CAT_EDAD
IV_ESTADO_CIVIL
IV_SEXO
modelo1=glm(CAMP_DEPOSITOS~CAT_EDAD, data=BANKTrain[,-1],family=binomial(link="logit"))
summary(modelo1)
modelo2=glm(CAMP_DEPOSITOS~CAT_EDAD+NIVEL_ESTUDIOS, data=BANKTrain[,-1],family=binomial(link="logit"))
summary(modelo2)
modelo3=glm(CAMP_DEPOSITOS~CAT_EDAD+NIVEL_ESTUDIOS+SEXO, data=BANKTrain[,-1],family=binomial(link="logit"))
summary(modelo3)
modelo4=glm(CAMP_DEPOSITOS~CAT_EDAD+NIVEL_ESTUDIOS+SEXO+ESTADO_CIVIL, data=BANKTrain[,-1],family=binomial(link="logit"))
summary(modelo4)
modelo5=glm(CAMP_DEPOSITOS~CAT_EDAD+NIVEL_ESTUDIOS+SEXO+ESTADO_CIVIL+RANGO_INGRESOS, data=BANKTrain[,-1],family=binomial(link="logit"))
summary(modelo5)
print("AIC")
AIC(modelo1)
AIC(modelo2)
AIC(modelo3)
AIC(modelo4)
AIC(modelo5)
print("BIC")
BIC(modelo1)
BIC(modelo2)
BIC(modelo3)
BIC(modelo4)
BIC(modelo5)
prediccion=predict(modelo1,type="response")
Pred_auxiliar= prediction(prediccion, BANKTrain$CAMP_DEPOSITOS, label.ordering = NULL)
auc.tmp = performance(Pred_auxiliar, "auc");
auc_modelo1_train = as.numeric(auc.tmp@y.values)
auc_modelo1_train
prediccion=predict(modelo1, newdata=BANKVal,type="response")
Pred_auxiliar = prediction(prediccion, BANKVal$CAMP_DEPOSITOS, label.ordering = NULL)
auc.tmp = performance(Pred_auxiliar, "auc");
auc_modelo1_val = as.numeric(auc.tmp@y.values)
auc_modelo1_val
prediccion=predict(modelo2,type="response")
Pred_auxiliar= prediction(prediccion, BANKTrain$CAMP_DEPOSITOS, label.ordering = NULL)
auc.tmp = performance(Pred_auxiliar, "auc");
auc_modelo2_train = as.numeric(auc.tmp@y.values)
prediccion=predict(modelo2, newdata=BANKVal,type="response")
Pred_auxiliar = prediction(prediccion, BANKVal$CAMP_DEPOSITOS, label.ordering = NULL)
auc.tmp = performance(Pred_auxiliar, "auc");
auc_modelo2_val = as.numeric(auc.tmp@y.values)
prediccion=predict(modelo3,type="response")
Pred_auxiliar= prediction(prediccion, BANKTrain$CAMP_DEPOSITOS, label.ordering = NULL)
auc.tmp = performance(Pred_auxiliar, "auc");
auc_modelo3_train = as.numeric(auc.tmp@y.values)
prediccion=predict(modelo3, newdata=BANKVal,type="response")
Pred_auxiliar = prediction(prediccion, BANKVal$CAMP_DEPOSITOS, label.ordering = NULL)
auc.tmp = performance(Pred_auxiliar, "auc");
auc_modelo3_val = as.numeric(auc.tmp@y.values)
prediccion=predict(modelo4,type="response")
Pred_auxiliar= prediction(prediccion, BANKTrain$CAMP_DEPOSITOS, label.ordering = NULL)
auc.tmp = performance(Pred_auxiliar, "auc");
auc_modelo4_train = as.numeric(auc.tmp@y.values)
prediccion=predict(modelo4, newdata=BANKVal,type="response")
Pred_auxiliar = prediction(prediccion, BANKVal$CAMP_DEPOSITOS, label.ordering = NULL)
auc.tmp = performance(Pred_auxiliar, "auc");
auc_modelo4_val = as.numeric(auc.tmp@y.values)
prediccion=predict(modelo5,type="response")
Pred_auxiliar= prediction(prediccion, BANKTrain$CAMP_DEPOSITOS, label.ordering = NULL)
auc.tmp = performance(Pred_auxiliar, "auc");
auc_modelo5_train = as.numeric(auc.tmp@y.values)
prediccion=predict(modelo5, newdata=BANKVal,type="response")
Pred_auxiliar = prediction(prediccion, BANKVal$CAMP_DEPOSITOS, label.ordering = NULL)
auc.tmp = performance(Pred_auxiliar, "auc");
auc_modelo5_val = as.numeric(auc.tmp@y.values)
Modelo_1=c(auc_modelo1_train,auc_modelo1_val)
Modelo_2=c(auc_modelo2_train,auc_modelo2_val)
Modelo_3=c(auc_modelo3_train,auc_modelo3_val)
Modelo_4=c(auc_modelo4_train,auc_modelo4_val)
Modelo_5=c(auc_modelo5_train,auc_modelo5_val)
A=data.frame(Modelo_1,Modelo_2,Modelo_3,Modelo_4,Modelo_5)
rownames(A)=c("auc_train","auc_val")
colnames(A)=c("Modelo1","Modelo2","Modelo3","Modelo4","Modelo5")
A
BANKTest$prediccion5=predict(modelo5, newdata=BANKTest,type="response")
Pred_auxiliar5 = prediction(BANKTest$prediccion5, BANKTest$CAMP_DEPOSITOS, label.ordering = NULL)
auc.tmp = performance(Pred_auxiliar5, "auc");
auc_modelo5_test = as.numeric(auc.tmp@y.values)
auc_modelo5_test
BANKTest$prediccion2=predict(modelo2, newdata=BANKTest,type="response")
Pred_auxiliar2 = prediction(BANKTest$prediccion2, BANKTest$CAMP_DEPOSITOS, label.ordering = NULL)
auc.tmp = performance(Pred_auxiliar2, "auc");
auc_modelo2_test = as.numeric(auc.tmp@y.values)
auc_modelo2_test
CURVA_ROC_modelo5_train <- performance(Pred_auxiliar5,"tpr","fpr")
plot(CURVA_ROC_modelo5_train,colorize=TRUE)
abline(a=0,b=1,col="black")
CURVA_ROC_modelo2_train <- performance(Pred_auxiliar2,"tpr","fpr")
plot(CURVA_ROC_modelo2_train,colorize=TRUE)
abline(a=0,b=1,col="black")
GINI_train=2*auc_modelo5_train-1
GINI_train
GINI_test=2*auc_modelo5_test-1
GINI_test
GINI_train=2*auc_modelo2_train-1
GINI_train
GINI_test=2*auc_modelo2_test-1
GINI_test
mean(as.numeric(BANKTest$CAMP_DEPOSITOS)-1)
aggregate(BANKTest$prediccion5~BANKTest$CAMP_DEPOSITOS,FUN=mean)
mean(as.numeric(BANKTest$CAMP_DEPOSITOS)-1)
aggregate(BANKTest$prediccion2~BANKTest$CAMP_DEPOSITOS,FUN=mean)
ALPHA=0.810
Confusion_Test5=table(BANKTest$CAMP_DEPOSITOS,BANKTest$prediccion5>=ALPHA)
Confusion_Test2=table(BANKTest$CAMP_DEPOSITOS,BANKTest$prediccion2>=ALPHA)
Confusion_Test5
Confusion_Test2
BANK_KS5=BANKTest[order(BANKTest$prediccion5, decreasing=TRUE),c("CAMP_DEPOSITOS","prediccion5")]
BANK_KS5$N=1:length(BANK_KS5$CAMP_DEPOSITOS)
BANK_KS5$EXITOS_ACUM=cumsum(as.numeric(BANK_KS5$CAMP_DEPOSITOS)-1)
BANK_KS5$FRACASOS_ACUM=BANK_KS5$N-BANK_KS5$EXITOS_ACUM
BANK_KS5$EXITOS_TOT=sum(BANK_KS5$CAMP_DEPOSITOS==1)
BANK_KS5$FRACASOS_TOT=sum(BANK_KS5$CAMP_DEPOSITOS==0)
BANK_KS5$TOTAL=BANK_KS5$EXITOS_TOT+BANK_KS5$FRACASOS_TOT
BANK_KS5$TPR=BANK_KS5$EXITOS_ACUM/BANK_KS5$EXITOS_TOT
BANK_KS5$FPR=BANK_KS5$FRACASOS_ACUM/BANK_KS5$FRACASOS_TOT
BANK_KS5$DIFF=BANK_KS5$TPR-BANK_KS5$FPR
plot(BANK_KS5$DIFF, xlab="",ylab="discriminación")
BANK_KS2=BANKTest[order(BANKTest$prediccion2, decreasing=TRUE),c("CAMP_DEPOSITOS","prediccion2")]
BANK_KS2$N=1:length(BANK_KS2$CAMP_DEPOSITOS)
BANK_KS2$EXITOS_ACUM=cumsum(as.numeric(BANK_KS2$CAMP_DEPOSITOS)-1)
BANK_KS2$FRACASOS_ACUM=BANK_KS2$N-BANK_KS2$EXITOS_ACUM
BANK_KS2$EXITOS_TOT=sum(BANK_KS2$CAMP_DEPOSITOS==1)
BANK_KS2$FRACASOS_TOT=sum(BANK_KS2$CAMP_DEPOSITOS==0)
BANK_KS2$TOTAL=BANK_KS2$EXITOS_TOT+BANK_KS2$FRACASOS_TOT
BANK_KS2$TPR=BANK_KS2$EXITOS_ACUM/BANK_KS2$EXITOS_TOT
BANK_KS2$FPR=BANK_KS2$FRACASOS_ACUM/BANK_KS2$FRACASOS_TOT
BANK_KS2$DIFF=BANK_KS2$TPR-BANK_KS2$FPR
plot(BANK_KS2$DIFF, xlab="",ylab="discriminación")
KS5=max(BANK_KS5$DIFF)
KS5
KS2=max(BANK_KS2$DIFF)
KS2
umbral5 <- which(BANK_KS5$DIFF==KS5)
sprintf("umbral5: ")
umbral5
umbral2 <- which(BANK_KS2$DIFF==KS2)
sprintf("umbral2: ")
umbral2
BANK_KS5[umbral5,c("CAMP_DEPOSITOS","prediccion5")]
BANK_KS2[umbral2,c("CAMP_DEPOSITOS","prediccion2")]
costeLlamada=8
beneficioVenta=10
BANK_KS5$BeneficioTP=beneficioVenta-costeLlamada
BANK_KS5$BeneficioTN=0
BANK_KS5$PerdidaFP=-costeLlamada
BANK_KS5$PerdidaFN=-beneficioVenta
BANK_KS2$BeneficioTP=beneficioVenta-costeLlamada
BANK_KS2$BeneficioTN=0
BANK_KS2$PerdidaFP=-costeLlamada
BANK_KS2$PerdidaFN=-beneficioVenta
BANK_KS5$BeneficioFinan=BANK_KS5$EXITOS_ACUM*BANK_KS5$BeneficioTP+
BANK_KS5$FRACASOS_ACUM*BANK_KS5$PerdidaFP
plot(BANK_KS5$BeneficioFinan,xlab="",ylab="Beneficio Financiero")
sprintf("beneficio máximo según el modelo5 = %i ", max(BANK_KS5$BeneficioFinan))
umbral5 <- which(BANK_KS5$BeneficioFinan==max(BANK_KS5$BeneficioFinan))
sprintf("umbral de selección modelo5 : ")
umbral5
BANK_KS2$BeneficioFinan=BANK_KS2$EXITOS_ACUM*BANK_KS2$BeneficioTP+
BANK_KS2$FRACASOS_ACUM*BANK_KS2$PerdidaFP
plot(BANK_KS2$BeneficioFinan,xlab="",ylab="Beneficio Financiero")
sprintf ("beneficio máximo según el modelo2 = %i ", max(BANK_KS2$BeneficioFinan))
umbral2 <- which(BANK_KS2$BeneficioFinan==max(BANK_KS2$BeneficioFinan))
sprintf("umbral de selección modelo2 : ")
umbral2
BANK_KS5[umbral5,c("CAMP_DEPOSITOS","prediccion5")]
BANK_KS2[umbral2,c("CAMP_DEPOSITOS","prediccion2")]
BANK_KS5$Oportunidad=BANK_KS5$EXITOS_ACUM*BANK_KS5$BeneficioTP+
(BANK_KS5$EXITOS_TOT-BANK_KS5$EXITOS_ACUM)*BANK_KS5$PerdidaFN+
BANK_KS5$FRACASOS_ACUM*BANK_KS5$PerdidaFP+
(BANK_KS5$FRACASOS_TOT-BANK_KS5$FRACASOS_ACUM)*BANK_KS5$BeneficioTN
plot(BANK_KS5$Oportunidad,xlab="",ylab="Beneficio - Coste de Oportunidad")
max(BANK_KS5$Oportunidad)
umbral5 <- which(BANK_KS5$Oportunidad==max(BANK_KS5$Oportunidad))
BANK_KS2$Oportunidad=BANK_KS2$EXITOS_ACUM*BANK_KS2$BeneficioTP+
(BANK_KS2$EXITOS_TOT-BANK_KS2$EXITOS_ACUM)*BANK_KS2$PerdidaFN+
BANK_KS2$FRACASOS_ACUM*BANK_KS2$PerdidaFP+
(BANK_KS2$FRACASOS_TOT-BANK_KS2$FRACASOS_ACUM)*BANK_KS2$BeneficioTN
plot(BANK_KS2$Oportunidad,xlab="",ylab="Beneficio - Coste de Oportunidad")
max(BANK_KS2$Oportunidad)
umbral2 <- which(BANK_KS2$Oportunidad==max(BANK_KS2$Oportunidad))
BANK_KS5[umbral5,c("CAMP_DEPOSITOS","prediccion5")]
BANK_KS2[umbral2,c("CAMP_DEPOSITOS","prediccion2")]
BANK_NEW$probabilidad=predict(modelo5, newdata=BANK_NEW,type="response")
BANK_NEW$potencial=0
BANK_NEW$potencial[BANK_NEW$probabilidad>=0.8333507] = 1
write.csv2(BANK_NEW, file = "Campaña Nueva Resultado Potenciales.csv")
